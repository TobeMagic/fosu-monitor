"""
Django settings for monitor project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# sys.path是Python的搜索模块的路径集(添加apps搜索路径）
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-lo^w!p68a*k&rpeo_n@gfuz+f%*m62b^%7a-j&7z%!291&9$l_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap4',
    'django_apscheduler',
    'Visualization',
    'Weibo',
    'Tieba',
    'myaccount',
    'Settings',
    'widget_tweaks',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]
SITE_ID = 1

# simpleUI 主题配置
SIMPLEUI_DEFAULT_THEME = 'e-red.css'
SIMPLEUI_LOGO = 'https://hakaimg.com/i/2022/11/25/4up8oj2.png'
SIMPLEUI_ICON = {
    '微博': 'fa fa-comment',
    '贴吧': 'fa fa-comments',
    '学生信息': 'fas fa-user-tie',
}
LANGUAGE_CODE = 'zh-hans'  # 语言设置
SIMPLEUI_HOME_ACTION = False  # 最近行为
SIMPLEUI_HOME_INFO = False  # github信息
SIMPLEUI_ANALYSIS = False  # 使用分析
SIMPLEUI_HOME_PAGE = 'http://maths.fosu.edu.cn/wordcloud/'  # 指向页面
SIMPLEUI_HOME_TITLE = '每周词云'  # 首页标题
SIMPLEUI_HOME_ICON = 'fa fa-cloud'  # 首页图标
SIMPLEUI_INDEX = '/account/profile/update'
# allauth 配置
# 基本设定
ACCOUNT_AUTHENTICATION_METHOD = 'username'  # 验证用户名
ACCOUNT_EMAIL_REQUIRED = False  # 不需要邮箱
LOGIN_REDIRECT_URL = '/'  # 登录跳转链接
ACCOUNT_LOGOUT_ON_GET = True  # 用户登出确认
ACCOUNT_SIGNUP_FORM_CLASS = None  # 注册表单
ACCOUNT_FORMS = ({
    'reset_password': 'myaccount.forms.ResetPasswordForm',  # 重置密码表单
})
# 验证后端
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'monitor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 使得模板中能够找到{{MEDIA URL}}
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'monitor.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# 部署用数据库配置
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'Monitor',
#         'USER': 'root',
#         'PASSWORD': 'Monitor@2022',
#         'HOST': 'db',
#         'PORT': '3306',
#         'OPTIONS': {'charset': 'utf8mb4'},
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True
USE_L10N = True
USE_TZ = False  # 时间不准问题 不为UTC

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")  # 使用 collectstatic后收集的静态文件的存放绝对路径

# MEDIA files (upload or download images)

MEDIA_URL = '/appendix/'
# 设置上传文件的路径
MEDIA_ROOT = os.path.join(BASE_DIR, 'appendix')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# log 日志记录
LOGGING = {
    'version': 1,  # 必须
    "disable_existing_loggers": False,  # 不允许其他日志同时记录
    'handlers': {
        'console': {  # handler 名称（表示控制台输出）
            "class": "logging.StreamHandler",  # 在控制台流 类
            'formatter': 'simple',
            'level': 'DEBUG'
        },
        'file': {  # handler 名称 (表示文件输出）
            'level': 'DEBUG',
            'class': 'logging.FileHandler',  # 文件流类
            'formatter': 'simple',
            # 得到完整路径并拼接
            'filename': os.path.join(BASE_DIR, 'logs/debug.log'),
        },
        'performance_file': {
            'formatter': 'simple',
            'level': 'DEBUG',
            'filename': os.path.join(BASE_DIR, 'logs/performance.log'),
            'class': 'logging.FileHandler'
        }
    },
    'formatters': {
        # simple 类
        'simple': {
            'format': '%(asctime)s , %(name)s [ %(levelname)s ] %(message)s',
        }
    },

    # 根日志记录器（父记录器）默认记录器，如果没有
    'root': {
        'handlers': ['file', 'console'],  # 记录到文件和控制台中
        'level': 'INFO',  # 默认值为 warn
    },
    'loggers': {
        # 默认使用loggers 没有指定则使用root
        # django 默认记录器
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        # 与logger名字一样
        'interview.performance': {
            'handlers': ['console', 'performance_file'],
            'propagate': False,
            'level': 'INFO',
        }
    }
}
